---
import type { HTMLAttributes } from "astro/types";
import { cn } from "@/lib/utils";

type VariantType = 
  | "default" 
  | "defaulttext"
  | "lead" 
  | "muted" 
  | "description";

type SizeType = 
  | "xxxxl"  
  | "xxxl"
  | "xxl"
  | "xl"
  | "lg"
  | "md"
  | "sm"
  | "xs"
  | "xxs";

type FontWeightType =
  | "black"
  | "bold"
  | "semibold"
  | "normal"
  | "medium"
  | "light"
  | "extralight"
  | "thin";

type FontStyleType = "marcellus" | "openSans" | "workSans";

interface Props extends HTMLAttributes<"p"> {
  variant?: VariantType;
  size?: SizeType;
  fontweight?: FontWeightType;
  fontstyle?: FontStyleType;
  class?: string;
}

const {
  variant = "default",
  size = "sm",
  fontweight = "normal",
  fontstyle = "openSans",
  class: className,
  ...rest
} = Astro.props;

const variants: Record<VariantType, string> = {
  default: "font-openSans tracking-wide leading-7 indent-8 mb-3 text-justify",
  defaulttext: "font-openSans tracking-wide leading-7 text-justify",
  lead: "text-xl text-muted-foreground",
  muted: "text-muted-foreground",
  description: "text-sm text-muted-foreground",
};

const sizes: Record<SizeType, string> = {
  xxxxl: "text-7xl md:text-9xl",
  xxxl: "text-6xl md:text-8xl",
  xxl: "text-4xl md:text-6xl",
  xl: "text-2xl md:text-4xl",
  lg: "text-xl md:text-2xl",
  md: "text-base md:text-lg",
  sm: "text-sm md:text-base",
  xs: "text-xs md:text-sm",
  xxs: "text-xs md:text-xs",
};

const fontweights: Record<FontWeightType, string> = {
  black: "font-black",
  bold: "font-bold",
  semibold: "font-semibold",
  normal: "font-normal",
  medium: "font-medium",
  light: "font-light",
  extralight: "font-extralight",
  thin: "font-thin",
};

const fontstyles: Record<FontStyleType, string> = {
  marcellus: "font-marcellus",
  openSans: "font-openSans",
  workSans: "font-workSans",
};

const classes = cn(
  variants[variant],
  sizes[size],
  fontweights[fontweight],
  fontstyles[fontstyle],
  className
);
---
<p class={classes} {...rest}>
  <slot />
</p>